name: CI/CD Pipeline with Security Scan

# 1. Triggers: This workflow runs on a push to the main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # 2. Build Job: Builds the Docker image
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

  # 3. Security Scan Job: Scans the image for vulnerabilities
  security-scan:
    name: Scan for Vulnerabilities
    needs: build # This job runs only after the 'build' job is successful
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest"
          format: "table"
          exit-code: "1" # Fail the build if vulnerabilities are found
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  # 4. Deploy Job (Example): A placeholder for your deployment steps
  deploy:
    name: Deploy to Production
    needs: security-scan # This job runs only after the 'security-scan' job is successful
    runs-on: ubuntu-latest

    steps:
      - name: Placeholder deployment step
        run: |
          echo "Deploying to production environment..."
          echo "Image ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest is ready for deployment."
